<?xml version="1.0" encoding="utf-8"?>
<NEKTAR>  
  <EXPANSIONS>    
    <E COMPOSITE="C[100,101,102]" NUMMODES="7" FIELDS="u,v" TYPE="MODIFIED" />  
    <E COMPOSITE="C[100,101,102]" NUMMODES="6" FIELDS="p" TYPE="MODIFIEDQUADPLUS1" />
  </EXPANSIONS>
  
  <CONDITIONS>    
    <SOLVERINFO>
      <I PROPERTY="SolverType"                           VALUE="VelocityCorrectionScheme"   />
      <I PROPERTY="EqType"                               VALUE="UnsteadyNavierStokes"       />
      <I PROPERTY="Projection"                           VALUE="Galerkin"                   /> 
      <I PROPERTY="EvolutionOperator"                     VALUE="Direct"                  />
      <I PROPERTY="TimeIntegrationMethod"                 VALUE="IMEXOrder2"                 />
      <!-- <I PROPERTY="SpectralVanishingViscosity"            VALUE="DGKernel"                        /> -->
      <!-- <I PROPERTY="SpectralVanishingViscosityHomo1D"      VALUE="ExpKernel"                       /> -->
      <!-- <I PROPERTY="SPECTRALHPDEALIASING"          VALUE="True"           /> -->
      <!-- <I PROPERTY="DEALIASING"                           VALUE="True"                        /> -->
      <!-- <I PROPERTY="Homogeneous"                          VALUE="1D"                         /> -->
      <!-- <I PROPERTY="UseFFT"                               VALUE="FFTW"                        /> -->
      <I PROPERTY="GlobalSysSoln"                 VALUE="XxtMultiLevelStaticCond" />
      <I PROPERTY="Driver"                               VALUE="ModifiedArnoldi"            />
    </SOLVERINFO>    

    <PARAMETERS>
    <!--General parameters-->
      <P> TimeStep        = 0.004      </P>
      <P> NumSteps = 80e3 </P>
      <P> IO_CheckSteps   = NumSteps         </P> 
      <P> IO_InfoSteps    = NumSteps/50        </P> 
      <P> IO_CFLSteps     = IO_InfoSteps         </P>
      <!-- <P> HistorySteps    = IO_InfoSteps * 2 </P> -->
      <!-- <P> EnergySteps     = IO_InfoSteps * 10</P> -->
      <!-- <P> IO_FiltersInfoSteps = EnergySteps </P> -->
      <P> SVVDiffCoeff    = 0.1                    </P>
      <P> SVVCutoffRatio  = 0.75                    </P>
      <!-- <P> HomModesZ       = 2                       </P> -->
      <!-- <P> LZ              = 2                     </P> -->

      <!-- Parameters for the modified Arnoldi method -->
      <P> kdim            = 4                   </P>
      <P> nvec            = 2                   </P>
      <P> evtol           = 1e-06               </P>
      <p> nits            = 500                 </p>
      
      <!-- Parameters for the simulation -->
      <!-- CHANGE THIS BEFORE RUNNING THE SIMULATION -->
      <!-- it has to match the definition of x0 in the .geo file -->
      <!-- ........................................... -->
      <!-- ........................................... -->
      <!-- ........................................... -->
      <p> lengthBeforeGap       = 50 </p> <!-- in terms of deltaStar_leadingEdge !-->
      <!-- ........................................... -->
      <!-- ........................................... -->
      <!-- ........................................... -->
      <p> a                     = 1.7207876575205 </p> <!-- deltaStar = a * x/sqrt(Re_x) !-->
      <p> Uinf                  = 1                   </p>
      <p> deltaStar_le          = 1  </p> 
      <P> Re_deltaStar_le       = 1000       </P> <!-- Reynolds number based on deltaStar_leadingEdge !-->
      <P> Kinvis                = Uinf*deltaStar_le/Re_deltaStar_le                 </P>  
      <p> deltaStar_BC          = sqrt(1 - lengthBeforeGap * a^2/Re_deltaStar_le) </p> <!-- deltaStar at the boundary condition !-->
      <P> Re_deltaStar_BC       = Uinf * deltaStar_BC / Kinvis </P> <!-- Reynolds number based on deltaStar_BC !-->
      <P> eta_99                = 4.910009398349851 </P> <!-- 99% of the free stream velocity is reached at this eta value (taken from python script solve_bvp.py) !-->
      <P> delta_BC                 = deltaStar_BC*eta_99/a  </P> <!-- boudary layer thickness, fixed value (keeping in mind that we have enough resolution on the mesh) !-->
      <!-- create y2eta based on delta (from y) and eta_99 as a linear relation -->
      <P> y2eta                 = eta_99/delta_BC           </P> 
      <p> Re_x_BC                  = (Re_deltaStar_BC/y2eta)^2 </p>
      <p> Vinf                  = 0.5*Uinf/sqrt(Re_x_BC)*y2eta  </p>
      <P> etaMax          = 9.84                      </P>  <!-- based on python plotting script. It fits better than etaMax=10, the endpoint of the simulation, both for u and v !-->
      <P> yMax        = etaMax/y2eta             </P> <!--[m]-->  
      <p> a1_u = 0.33263899291846005 </p>
      <p> a2_u = 8830.512069032215 </p>
      <p> a3_u = 58.97366593890366 </p>
      <p> a4_u = 615.0518197268191 </p>
      <p> a5_u = 32.12385528953152 </p>
      <p> a6_u = -17.16678907227338 </p>
      <p> a7_u = 11.02175978217767 </p>
      <p> a8_u = -1.9645118354438575 </p>
      <p> a9_u = 0.5010442307141161 </p>
      <p> a10_u = -0.0645796009748346 </p>
      <p> a11_u = 0.006179765415827125 </p>
      <p> b1_u = 26593.41072503167 </p>
      <p> b2_u = 176.8055649980844 </p>
      <p> b3_u = 1855.7665505833227 </p>
      <p> b4_u = 272.5391794254054 </p>
      <p> b5_u = -39.221863541559394 </p>
      <p> b6_u = 36.24230326537252 </p>
      <p> b7_u = -0.07795052580215707 </p>
      <p> b8_u = -0.8421866779902756 </p>
      <p> b9_u = 0.44410766209840075 </p>
      <p> b10_u = -0.06341415789453857 </p>
      <p> b11_u = 0.006179765415827125 </p>
      <p> a1_v = -1.9959025216159896e-05 </p>
      <p> a2_v = 0.16695529626584846 </p>
      <p> a3_v = -0.575204509312059 </p>
      <p> a4_v = -0.4341004660550698 </p>
      <p> a5_v = 299.3706050451578 </p>
      <p> a6_v = -93.83786038348894 </p>
      <p> a7_v = 16.266365937513303 </p>
      <p> a8_v = -1.8990540751356129 </p>
      <p> a9_v = 0.33729889822536685 </p>
      <p> a10_v = -0.04383523593037588 </p>
      <p> a11_v = 0.0034080097149121807 </p>
      <p> b1_v = -3.380409827085182 </p>
      <p> b2_v = -3.1753939961101696 </p>
      <p> b3_v = 1805.0761851180248 </p>
      <p> b4_v = -569.1055835320207 </p>
      <p> b5_v = 102.77873382853763 </p>
      <p> b6_v = 4.5614994586104824 </p>
      <p> b7_v = -2.027219234693251 </p>
      <p> b8_v = -0.01875987489840645 </p>
      <p> b9_v = 0.1441683101478324 </p>
      <p> b10_v = -0.024466672927746642 </p>
      <p> b11_v = 0.0019804940487676533 </p>
    </PARAMETERS>
    
    <VARIABLES>
      <V ID="0"> u </V>
      <V ID="1"> v </V>  
      <V ID="2"> p </V>
    </VARIABLES>
    
    <BOUNDARYREGIONS>
      <B ID="0"> C[1] </B>    <!-- inlet !-->  
      <B ID="1"> C[2] </B>    <!-- outlet !-->
      <B ID="2"> C[3] </B>    <!-- top !-->
      <B ID="3"> C[4] </B>    <!-- bottom + left & right gap walls !-->
    </BOUNDARYREGIONS>    

    <BOUNDARYCONDITIONS>
      <REGION REF="0">  <!-- inlet !-->                  
        <!-- I do it like that (when y>=yMax) in order to avoid discontinuities in the velocity field at the inflow (I had discontinuities, which affect the presure field and therefore the whole domain), the error is of the order of 10^-7 for u and 10^-10 for v ! -->
        <D VAR="u" VALUE="0" />
        <D VAR="v" VALUE="0" />
        <N VAR="p" USERDEFINEDTYPE="H" VALUE="0" /> <!-- high-order boundary condition, VALUE is not used !-->
      </REGION>

      <REGION REF="1">   <!-- outlet !-->
        <N VAR="u" VALUE="0" />
        <N VAR="v" VALUE="0" />
        <D VAR="p" VALUE="0" />
      </REGION>  
            
      <REGION REF="2">   <!-- top = far-field !-->
        <!-- I do it like that in order to avoid discontinuities in the velocity field at the top boundary, the error is of the order of 10^-7 for u and 10^-10 for v ! -->
        <D VAR="u" VALUE="0" />
        <D VAR="v" VALUE="0" />
        <N VAR="p" USERDEFINEDTYPE="H" VALUE="0" />      
      </REGION>

      <REGION REF="3">  <!-- bottom = wall no slip !-->  
        <D VAR="u" VALUE="0" />
        <D VAR="v" VALUE="0" />        
        <N VAR="p" USERDEFINEDTYPE="H" VALUE="0" />  
      </REGION>    
      </BOUNDARYCONDITIONS>

    <FUNCTION NAME="BaseFlow">
      <F VAR="u,v,p" FILE="../baseflow.fld"   />
    </FUNCTION>

    
    <!-- <FUNCTION NAME="InitialConditions"> -->
    <!--   <F VAR="u,v,p" FILE="mesh_d4_w16.25_54.chk" /> -->
    <!-- </FUNCTION> -->

    
    <FUNCTION NAME="InitialConditions">
      <E VAR="u" VALUE="0" />
      <E VAR="v" VALUE="0" />
      <E VAR="p" VALUE="0.02*awgn(1.0)" />
   </FUNCTION>
  </CONDITIONS>
  <!-- <FILTERS> -->

  <!--   <FILTER TYPE="ModalEnergy"> -->
  <!--     <PARAM NAME="OutputFile">EnergyFile</PARAM> -->
  <!--     <PARAM NAME="OutputFrequency">EnergySteps</PARAM> -->
  <!--   </FILTER> -->

  <!--   <FILTER TYPE="HistoryPoints"> -->
  <!--     <PARAM NAME="OutputFile">HistoryPoints</PARAM> -->
  <!--     <PARAM NAME="OutputFrequency">HistorySteps</PARAM> -->
  <!--     <PARAM NAME="Points"> -->
  <!--   4.06250000000000000000 2.00000000000000000000 0 -->
  <!--   4.06250000000000000000 -1.33333333333333333333 0 -->
  <!--   4.06250000000000000000 -2.66666666666666666666 0 -->
  <!--   8.12500000000000000000 2.00000000000000000000 0 -->
  <!--   8.12500000000000000000 -1.33333333333333333333 0 -->
  <!--   8.12500000000000000000 -2.66666666666666666666 0 -->
  <!--   12.18750000000000000000 2.00000000000000000000 0 -->
  <!--   12.18750000000000000000 -1.33333333333333333333 0 -->
  <!--   12.18750000000000000000 -2.66666666666666666666 0 -->
  <!--   16.25 2.00000000000000000000 0 -->
  <!--   24.37500000000000000000 2.00000000000000000000 0 -->
  <!--   32.50 2.00000000000000000000 0 -->
  <!--     </PARAM> -->
  <!--   </FILTER> -->
  <!-- </FILTERS> -->
</NEKTAR>

